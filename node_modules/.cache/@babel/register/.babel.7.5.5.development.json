{
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/src\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/src/handler.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/handler.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/handler.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/handler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
        "sourceFileName": "handler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _s = require(\"./s3\");\n\nvar _store = require(\"./store\");\n\n/**\n* Parameters (env vars)\n* \n* 1) BUCKET_NAME - name of the bucket containing the CloudTrail logs\n* 2) ORG_ID - the id of the AWS Organization to consider when creating/partitioning the database\n* 3) DATABASE - the name of the Athena database in which you want to create the table\n* 4) TABLE_NAME - the name of the table to create in the Athena database in DATABASE\n*/\nexports.handler = async (event, context) => {\n  // console.log('Received event:', JSON.stringify(event, null, 2));\n  await (0, _s.getAccounts)('gorillastack-cloudtrail', 'AWSLogs/o-s2ds5kg68o/'); // Get the object from the event and show its content type\n  // const bucket = event.Records[0].s3.bucket.name;\n  // const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n  // const params = {\n  //     Bucket: bucket,\n  //     Key: key,\n  // };\n  // try {\n  //     const { ContentType } = await s3.getObject(params).promise();\n  //     console.log('CONTENT TYPE:', ContentType);\n  //     return ContentType;\n  // } catch (err) {\n  //     console.log(err);\n  //     const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n  //     console.log(message);\n  //     throw new Error(message);\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXIuanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsImhhbmRsZXIiLCJldmVudCIsImNvbnRleHQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7Ozs7O0FBUUFBLE9BQU8sQ0FBQ0MsT0FBUixHQUFrQixPQUFPQyxLQUFQLEVBQWNDLE9BQWQsS0FBMEI7QUFDeEM7QUFDQSxRQUFNLG9CQUFZLHlCQUFaLEVBQXVDLHVCQUF2QyxDQUFOLENBRndDLENBSXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDSCxDQXJCRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZS9kZXYvZ3MvYXRoZW5hLWNsb3VkdHJhaWwtcGFydGl0aW9uZXIvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QWNjb3VudHMgfSBmcm9tICcuL3MzJztcbmltcG9ydCB7IGZpbHRlclBhcnRpdGlvbnNUb0NyZWF0ZSwgc2F2ZVBhcnRpdGlvbiB9IGZyb20gJy4vc3RvcmUnO1xuXG4vKipcbiogUGFyYW1ldGVycyAoZW52IHZhcnMpXG4qIFxuKiAxKSBCVUNLRVRfTkFNRSAtIG5hbWUgb2YgdGhlIGJ1Y2tldCBjb250YWluaW5nIHRoZSBDbG91ZFRyYWlsIGxvZ3NcbiogMikgT1JHX0lEIC0gdGhlIGlkIG9mIHRoZSBBV1MgT3JnYW5pemF0aW9uIHRvIGNvbnNpZGVyIHdoZW4gY3JlYXRpbmcvcGFydGl0aW9uaW5nIHRoZSBkYXRhYmFzZVxuKiAzKSBEQVRBQkFTRSAtIHRoZSBuYW1lIG9mIHRoZSBBdGhlbmEgZGF0YWJhc2UgaW4gd2hpY2ggeW91IHdhbnQgdG8gY3JlYXRlIHRoZSB0YWJsZVxuKiA0KSBUQUJMRV9OQU1FIC0gdGhlIG5hbWUgb2YgdGhlIHRhYmxlIHRvIGNyZWF0ZSBpbiB0aGUgQXRoZW5hIGRhdGFiYXNlIGluIERBVEFCQVNFXG4qL1xuZXhwb3J0cy5oYW5kbGVyID0gYXN5bmMgKGV2ZW50LCBjb250ZXh0KSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coJ1JlY2VpdmVkIGV2ZW50OicsIEpTT04uc3RyaW5naWZ5KGV2ZW50LCBudWxsLCAyKSk7XG4gICAgYXdhaXQgZ2V0QWNjb3VudHMoJ2dvcmlsbGFzdGFjay1jbG91ZHRyYWlsJywgJ0FXU0xvZ3Mvby1zMmRzNWtnNjhvLycpXG4gICAgXG4gICAgLy8gR2V0IHRoZSBvYmplY3QgZnJvbSB0aGUgZXZlbnQgYW5kIHNob3cgaXRzIGNvbnRlbnQgdHlwZVxuICAgIC8vIGNvbnN0IGJ1Y2tldCA9IGV2ZW50LlJlY29yZHNbMF0uczMuYnVja2V0Lm5hbWU7XG4gICAgLy8gY29uc3Qga2V5ID0gZGVjb2RlVVJJQ29tcG9uZW50KGV2ZW50LlJlY29yZHNbMF0uczMub2JqZWN0LmtleS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG4gICAgLy8gY29uc3QgcGFyYW1zID0ge1xuICAgIC8vICAgICBCdWNrZXQ6IGJ1Y2tldCxcbiAgICAvLyAgICAgS2V5OiBrZXksXG4gICAgLy8gfTtcbiAgICAvLyB0cnkge1xuICAgIC8vICAgICBjb25zdCB7IENvbnRlbnRUeXBlIH0gPSBhd2FpdCBzMy5nZXRPYmplY3QocGFyYW1zKS5wcm9taXNlKCk7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKCdDT05URU5UIFRZUEU6JywgQ29udGVudFR5cGUpO1xuICAgIC8vICAgICByZXR1cm4gQ29udGVudFR5cGU7XG4gICAgLy8gfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgLy8gICAgIGNvbnN0IG1lc3NhZ2UgPSBgRXJyb3IgZ2V0dGluZyBvYmplY3QgJHtrZXl9IGZyb20gYnVja2V0ICR7YnVja2V0fS4gTWFrZSBzdXJlIHRoZXkgZXhpc3QgYW5kIHlvdXIgYnVja2V0IGlzIGluIHRoZSBzYW1lIHJlZ2lvbiBhcyB0aGlzIGZ1bmN0aW9uLmA7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICAgIC8vICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgLy8gfVxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "handler.js"
      ],
      "names": [
        "exports",
        "handler",
        "event",
        "context"
      ],
      "mappings": ";;AAAA;;AACA;;AAEA;;;;;;;;AAQAA,OAAO,CAACC,OAAR,GAAkB,OAAOC,KAAP,EAAcC,OAAd,KAA0B;AACxC;AACA,QAAM,oBAAY,yBAAZ,EAAuC,uBAAvC,CAAN,CAFwC,CAIxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CArBD",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
      "sourcesContent": [
        "import { getAccounts } from './s3';\nimport { filterPartitionsToCreate, savePartition } from './store';\n\n/**\n* Parameters (env vars)\n* \n* 1) BUCKET_NAME - name of the bucket containing the CloudTrail logs\n* 2) ORG_ID - the id of the AWS Organization to consider when creating/partitioning the database\n* 3) DATABASE - the name of the Athena database in which you want to create the table\n* 4) TABLE_NAME - the name of the table to create in the Athena database in DATABASE\n*/\nexports.handler = async (event, context) => {\n    // console.log('Received event:', JSON.stringify(event, null, 2));\n    await getAccounts('gorillastack-cloudtrail', 'AWSLogs/o-s2ds5kg68o/')\n    \n    // Get the object from the event and show its content type\n    // const bucket = event.Records[0].s3.bucket.name;\n    // const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    // const params = {\n    //     Bucket: bucket,\n    //     Key: key,\n    // };\n    // try {\n    //     const { ContentType } = await s3.getObject(params).promise();\n    //     console.log('CONTENT TYPE:', ContentType);\n    //     return ContentType;\n    // } catch (err) {\n    //     console.log(err);\n    //     const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n    //     console.log(message);\n    //     throw new Error(message);\n    // }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564385283889
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/src\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/src/s3.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/s3.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/s3.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/s3.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
        "sourceFileName": "s3.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDays = exports.getMonths = exports.getYears = exports.getRegions = exports.getAccounts = exports.listBucketAtPath = void 0;\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * list the given bucket at the given path\n *\n * @param {String} bucket\n * @param {String} path\n */\nconst listBucketAtPath = (bucket, path) => new Promise((resolve, reject) => {\n  const s3 = new _awsSdk.default.S3({\n    apiVersion: '2006-03-01'\n  });\n  s3.getObjects({\n    Bucket: bucket,\n    Prefix: path,\n    Delimiter: '/'\n  }, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      console.log(`IsTruncated = ${data.IsTruncated}`);\n      console.log(data);\n      resolve(data);\n    }\n  });\n});\n/**\n * Methods for finding candidate subpaths for partitioning\n */\n\n\nexports.listBucketAtPath = listBucketAtPath;\n\nconst getAccounts = async (bucket, path) => {\n  const contents = await listBucketAtPath(bucket, path);\n  console.log(data);\n};\n\nexports.getAccounts = getAccounts;\n\nconst getRegions = async (bucket, path, account) => {};\n\nexports.getRegions = getRegions;\n\nconst getYears = async (bucket, path, account, region) => {};\n\nexports.getYears = getYears;\n\nconst getMonths = async (bucket, path, account, region, year) => {};\n\nexports.getMonths = getMonths;\n\nconst getDays = async (bucket, path, account, region, year, months) => {};\n\nexports.getDays = getDays;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInMzLmpzIl0sIm5hbWVzIjpbImxpc3RCdWNrZXRBdFBhdGgiLCJidWNrZXQiLCJwYXRoIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzMyIsImF3cyIsIlMzIiwiYXBpVmVyc2lvbiIsImdldE9iamVjdHMiLCJCdWNrZXQiLCJQcmVmaXgiLCJEZWxpbWl0ZXIiLCJlcnIiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsIklzVHJ1bmNhdGVkIiwiZ2V0QWNjb3VudHMiLCJjb250ZW50cyIsImdldFJlZ2lvbnMiLCJhY2NvdW50IiwiZ2V0WWVhcnMiLCJyZWdpb24iLCJnZXRNb250aHMiLCJ5ZWFyIiwiZ2V0RGF5cyIsIm1vbnRocyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7OztBQU1PLE1BQU1BLGdCQUFnQixHQUFHLENBQUNDLE1BQUQsRUFBU0MsSUFBVCxLQUFrQixJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ2pGLFFBQU1DLEVBQUUsR0FBRyxJQUFJQyxnQkFBSUMsRUFBUixDQUFXO0FBQUVDLElBQUFBLFVBQVUsRUFBRTtBQUFkLEdBQVgsQ0FBWDtBQUNBSCxFQUFBQSxFQUFFLENBQUNJLFVBQUgsQ0FBYztBQUFFQyxJQUFBQSxNQUFNLEVBQUVWLE1BQVY7QUFBa0JXLElBQUFBLE1BQU0sRUFBRVYsSUFBMUI7QUFBZ0NXLElBQUFBLFNBQVMsRUFBRTtBQUEzQyxHQUFkLEVBQWdFLENBQUNDLEdBQUQsRUFBTUMsSUFBTixLQUFlO0FBQzdFLFFBQUlELEdBQUosRUFBUztBQUNQVCxNQUFBQSxNQUFNLENBQUNTLEdBQUQsQ0FBTjtBQUNELEtBRkQsTUFFTztBQUNMRSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxpQkFBZ0JGLElBQUksQ0FBQ0csV0FBWSxFQUE5QztBQUNBRixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjtBQUNBWCxNQUFBQSxPQUFPLENBQUNXLElBQUQsQ0FBUDtBQUNEO0FBQ0YsR0FSRDtBQVdELENBYmlELENBQTNDO0FBZVA7Ozs7Ozs7QUFHTyxNQUFNSSxXQUFXLEdBQUcsT0FBT2xCLE1BQVAsRUFBZUMsSUFBZixLQUF3QjtBQUNqRCxRQUFNa0IsUUFBUSxHQUFHLE1BQU1wQixnQkFBZ0IsQ0FBQ0MsTUFBRCxFQUFTQyxJQUFULENBQXZDO0FBQ0FjLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaO0FBQ0QsQ0FITTs7OztBQUtBLE1BQU1NLFVBQVUsR0FBRyxPQUFPcEIsTUFBUCxFQUFlQyxJQUFmLEVBQXFCb0IsT0FBckIsS0FBaUMsQ0FDMUQsQ0FETTs7OztBQUdBLE1BQU1DLFFBQVEsR0FBRyxPQUFPdEIsTUFBUCxFQUFlQyxJQUFmLEVBQXFCb0IsT0FBckIsRUFBOEJFLE1BQTlCLEtBQXlDLENBQ2hFLENBRE07Ozs7QUFHQSxNQUFNQyxTQUFTLEdBQUcsT0FBT3hCLE1BQVAsRUFBZUMsSUFBZixFQUFxQm9CLE9BQXJCLEVBQThCRSxNQUE5QixFQUFzQ0UsSUFBdEMsS0FBK0MsQ0FDdkUsQ0FETTs7OztBQUdBLE1BQU1DLE9BQU8sR0FBRyxPQUFPMUIsTUFBUCxFQUFlQyxJQUFmLEVBQXFCb0IsT0FBckIsRUFBOEJFLE1BQTlCLEVBQXNDRSxJQUF0QyxFQUE0Q0UsTUFBNUMsS0FBdUQsQ0FDN0UsQ0FETSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZS9kZXYvZ3MvYXRoZW5hLWNsb3VkdHJhaWwtcGFydGl0aW9uZXIvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF3cyBmcm9tICdhd3Mtc2RrJztcblxuLyoqXG4gKiBsaXN0IHRoZSBnaXZlbiBidWNrZXQgYXQgdGhlIGdpdmVuIHBhdGhcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gYnVja2V0XG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aFxuICovXG5leHBvcnQgY29uc3QgbGlzdEJ1Y2tldEF0UGF0aCA9IChidWNrZXQsIHBhdGgpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgY29uc3QgczMgPSBuZXcgYXdzLlMzKHsgYXBpVmVyc2lvbjogJzIwMDYtMDMtMDEnIH0pO1xuICBzMy5nZXRPYmplY3RzKHsgQnVja2V0OiBidWNrZXQsIFByZWZpeDogcGF0aCwgRGVsaW1pdGVyOiAnLycgfSwgKGVyciwgZGF0YSkgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhgSXNUcnVuY2F0ZWQgPSAke2RhdGEuSXNUcnVuY2F0ZWR9YCk7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgIHJlc29sdmUoZGF0YSlcbiAgICB9XG4gIH0pO1xuXG5cbn0pO1xuXG4vKipcbiAqIE1ldGhvZHMgZm9yIGZpbmRpbmcgY2FuZGlkYXRlIHN1YnBhdGhzIGZvciBwYXJ0aXRpb25pbmdcbiAqL1xuZXhwb3J0IGNvbnN0IGdldEFjY291bnRzID0gYXN5bmMgKGJ1Y2tldCwgcGF0aCkgPT4ge1xuICBjb25zdCBjb250ZW50cyA9IGF3YWl0IGxpc3RCdWNrZXRBdFBhdGgoYnVja2V0LCBwYXRoKTtcbiAgY29uc29sZS5sb2coZGF0YSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmVnaW9ucyA9IGFzeW5jIChidWNrZXQsIHBhdGgsIGFjY291bnQpID0+IHtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRZZWFycyA9IGFzeW5jIChidWNrZXQsIHBhdGgsIGFjY291bnQsIHJlZ2lvbikgPT4ge1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE1vbnRocyA9IGFzeW5jIChidWNrZXQsIHBhdGgsIGFjY291bnQsIHJlZ2lvbiwgeWVhcikgPT4ge1xufTtcblxuZXhwb3J0IGNvbnN0IGdldERheXMgPSBhc3luYyAoYnVja2V0LCBwYXRoLCBhY2NvdW50LCByZWdpb24sIHllYXIsIG1vbnRocykgPT4ge1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "s3.js"
      ],
      "names": [
        "listBucketAtPath",
        "bucket",
        "path",
        "Promise",
        "resolve",
        "reject",
        "s3",
        "aws",
        "S3",
        "apiVersion",
        "getObjects",
        "Bucket",
        "Prefix",
        "Delimiter",
        "err",
        "data",
        "console",
        "log",
        "IsTruncated",
        "getAccounts",
        "contents",
        "getRegions",
        "account",
        "getYears",
        "region",
        "getMonths",
        "year",
        "getDays",
        "months"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;AAMO,MAAMA,gBAAgB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjF,QAAMC,EAAE,GAAG,IAAIC,gBAAIC,EAAR,CAAW;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAX,CAAX;AACAH,EAAAA,EAAE,CAACI,UAAH,CAAc;AAAEC,IAAAA,MAAM,EAAEV,MAAV;AAAkBW,IAAAA,MAAM,EAAEV,IAA1B;AAAgCW,IAAAA,SAAS,EAAE;AAA3C,GAAd,EAAgE,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7E,QAAID,GAAJ,EAAS;AACPT,MAAAA,MAAM,CAACS,GAAD,CAAN;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBF,IAAI,CAACG,WAAY,EAA9C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,MAAAA,OAAO,CAACW,IAAD,CAAP;AACD;AACF,GARD;AAWD,CAbiD,CAA3C;AAeP;;;;;;;AAGO,MAAMI,WAAW,GAAG,OAAOlB,MAAP,EAAeC,IAAf,KAAwB;AACjD,QAAMkB,QAAQ,GAAG,MAAMpB,gBAAgB,CAACC,MAAD,EAASC,IAAT,CAAvC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,CAHM;;;;AAKA,MAAMM,UAAU,GAAG,OAAOpB,MAAP,EAAeC,IAAf,EAAqBoB,OAArB,KAAiC,CAC1D,CADM;;;;AAGA,MAAMC,QAAQ,GAAG,OAAOtB,MAAP,EAAeC,IAAf,EAAqBoB,OAArB,EAA8BE,MAA9B,KAAyC,CAChE,CADM;;;;AAGA,MAAMC,SAAS,GAAG,OAAOxB,MAAP,EAAeC,IAAf,EAAqBoB,OAArB,EAA8BE,MAA9B,EAAsCE,IAAtC,KAA+C,CACvE,CADM;;;;AAGA,MAAMC,OAAO,GAAG,OAAO1B,MAAP,EAAeC,IAAf,EAAqBoB,OAArB,EAA8BE,MAA9B,EAAsCE,IAAtC,EAA4CE,MAA5C,KAAuD,CAC7E,CADM",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
      "sourcesContent": [
        "import aws from 'aws-sdk';\n\n/**\n * list the given bucket at the given path\n *\n * @param {String} bucket\n * @param {String} path\n */\nexport const listBucketAtPath = (bucket, path) => new Promise((resolve, reject) => {\n  const s3 = new aws.S3({ apiVersion: '2006-03-01' });\n  s3.getObjects({ Bucket: bucket, Prefix: path, Delimiter: '/' }, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      console.log(`IsTruncated = ${data.IsTruncated}`);\n      console.log(data);\n      resolve(data)\n    }\n  });\n\n\n});\n\n/**\n * Methods for finding candidate subpaths for partitioning\n */\nexport const getAccounts = async (bucket, path) => {\n  const contents = await listBucketAtPath(bucket, path);\n  console.log(data);\n};\n\nexport const getRegions = async (bucket, path, account) => {\n};\n\nexport const getYears = async (bucket, path, account, region) => {\n};\n\nexport const getMonths = async (bucket, path, account, region, year) => {\n};\n\nexport const getDays = async (bucket, path, account, region, year, months) => {\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564383775098
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/src\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/src/store.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/store.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/store.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src/store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
        "sourceFileName": "store.js"
      }
    },
    "ast": null,
    "code": "// Accounts last partitioned\n// \n// 012345678901\n// 012345678901/ap-southeast-2\n// 012345678901/ap-southeast-2/2019/\n// 012345678901/ap-southeast-2/2019/01\n// 012345678901/ap-southeast-2/2019/01/01\n// Store last log timestamp\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VSb290IjoiL1VzZXJzL2UvZGV2L2dzL2F0aGVuYS1jbG91ZHRyYWlsLXBhcnRpdGlvbmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gQWNjb3VudHMgbGFzdCBwYXJ0aXRpb25lZFxuLy8gXG5cblxuXG4vLyAwMTIzNDU2Nzg5MDFcbi8vIDAxMjM0NTY3ODkwMS9hcC1zb3V0aGVhc3QtMlxuLy8gMDEyMzQ1Njc4OTAxL2FwLXNvdXRoZWFzdC0yLzIwMTkvXG4vLyAwMTIzNDU2Nzg5MDEvYXAtc291dGhlYXN0LTIvMjAxOS8wMVxuLy8gMDEyMzQ1Njc4OTAxL2FwLXNvdXRoZWFzdC0yLzIwMTkvMDEvMDFcblxuLy8gU3RvcmUgbGFzdCBsb2cgdGltZXN0YW1wXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [],
      "mappings": "AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/src",
      "sourcesContent": [
        "\n// Accounts last partitioned\n// \n\n\n\n// 012345678901\n// 012345678901/ap-southeast-2\n// 012345678901/ap-southeast-2/2019/\n// 012345678901/ap-southeast-2/2019/01\n// 012345678901/ap-southeast-2/2019/01/01\n\n// Store last log timestamp\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564383743906
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/local.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/local.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/local.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/local.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
        "sourceFileName": "local.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst handler = require('./dist/handler').handler;\n\nhandler();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2FsLmpzIl0sIm5hbWVzIjpbImhhbmRsZXIiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQVAsQ0FBMEJELE9BQTFDOztBQUVBQSxPQUFPIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9lL2Rldi9ncy9hdGhlbmEtY2xvdWR0cmFpbC1wYXJ0aXRpb25lciIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGhhbmRsZXIgPSByZXF1aXJlKCcuL2Rpc3QvaGFuZGxlcicpLmhhbmRsZXI7XG5cbmhhbmRsZXIoKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "local.js"
      ],
      "names": [
        "handler",
        "require"
      ],
      "mappings": ";;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,OAA1C;;AAEAA,OAAO",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourcesContent": [
        "const handler = require('./dist/handler').handler;\n\nhandler();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564385796471
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
        "sourceFileName": "handler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _s = require(\"./s3\");\n\nvar _store = require(\"./store\");\n/**\n* Parameters (env vars)\n* \n* 1) BUCKET_NAME - name of the bucket containing the CloudTrail logs\n* 2) ORG_ID - the id of the AWS Organization to consider when creating/partitioning the database\n* 3) DATABASE - the name of the Athena database in which you want to create the table\n* 4) TABLE_NAME - the name of the table to create in the Athena database in DATABASE\n*/\n\n\nexports.handler = async (event, context) => {\n  // console.log('Received event:', JSON.stringify(event, null, 2));\n  await (0, _s.getAccounts)('gorillastack-cloudtrail', 'AWSLogs/o-s2ds5kg68o/'); // Get the object from the event and show its content type\n  // const bucket = event.Records[0].s3.bucket.name;\n  // const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n  // const params = {\n  //     Bucket: bucket,\n  //     Key: key,\n  // };\n  // try {\n  //     const { ContentType } = await s3.getObject(params).promise();\n  //     console.log('CONTENT TYPE:', ContentType);\n  //     return ContentType;\n  // } catch (err) {\n  //     console.log(err);\n  //     const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n  //     console.log(message);\n  //     throw new Error(message);\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXIuanMiXSwibmFtZXMiOlsiX3MiLCJyZXF1aXJlIiwiX3N0b3JlIiwiZXhwb3J0cyIsImhhbmRsZXIiLCJldmVudCIsImNvbnRleHQiLCJnZXRBY2NvdW50cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFoQjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXBCO0FBRUE7Ozs7Ozs7Ozs7QUFRQUUsT0FBTyxDQUFDQyxPQUFSLEdBQWtCLE9BQU9DLEtBQVAsRUFBY0MsT0FBZCxLQUEwQjtBQUMxQztBQUNBLFFBQU0sQ0FBQyxHQUFHTixFQUFFLENBQUNPLFdBQVAsRUFBb0IseUJBQXBCLEVBQStDLHVCQUEvQyxDQUFOLENBRjBDLENBRXFDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0QsQ0FuQkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2UvZGV2L2dzL2F0aGVuYS1jbG91ZHRyYWlsLXBhcnRpdGlvbmVyL2Rpc3QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9zID0gcmVxdWlyZShcIi4vczNcIik7XG5cbnZhciBfc3RvcmUgPSByZXF1aXJlKFwiLi9zdG9yZVwiKTtcblxuLyoqXG4qIFBhcmFtZXRlcnMgKGVudiB2YXJzKVxuKiBcbiogMSkgQlVDS0VUX05BTUUgLSBuYW1lIG9mIHRoZSBidWNrZXQgY29udGFpbmluZyB0aGUgQ2xvdWRUcmFpbCBsb2dzXG4qIDIpIE9SR19JRCAtIHRoZSBpZCBvZiB0aGUgQVdTIE9yZ2FuaXphdGlvbiB0byBjb25zaWRlciB3aGVuIGNyZWF0aW5nL3BhcnRpdGlvbmluZyB0aGUgZGF0YWJhc2VcbiogMykgREFUQUJBU0UgLSB0aGUgbmFtZSBvZiB0aGUgQXRoZW5hIGRhdGFiYXNlIGluIHdoaWNoIHlvdSB3YW50IHRvIGNyZWF0ZSB0aGUgdGFibGVcbiogNCkgVEFCTEVfTkFNRSAtIHRoZSBuYW1lIG9mIHRoZSB0YWJsZSB0byBjcmVhdGUgaW4gdGhlIEF0aGVuYSBkYXRhYmFzZSBpbiBEQVRBQkFTRVxuKi9cbmV4cG9ydHMuaGFuZGxlciA9IGFzeW5jIChldmVudCwgY29udGV4dCkgPT4ge1xuICAvLyBjb25zb2xlLmxvZygnUmVjZWl2ZWQgZXZlbnQ6JywgSlNPTi5zdHJpbmdpZnkoZXZlbnQsIG51bGwsIDIpKTtcbiAgYXdhaXQgKDAsIF9zLmdldEFjY291bnRzKSgnZ29yaWxsYXN0YWNrLWNsb3VkdHJhaWwnLCAnQVdTTG9ncy9vLXMyZHM1a2c2OG8vJyk7IC8vIEdldCB0aGUgb2JqZWN0IGZyb20gdGhlIGV2ZW50IGFuZCBzaG93IGl0cyBjb250ZW50IHR5cGVcbiAgLy8gY29uc3QgYnVja2V0ID0gZXZlbnQuUmVjb3Jkc1swXS5zMy5idWNrZXQubmFtZTtcbiAgLy8gY29uc3Qga2V5ID0gZGVjb2RlVVJJQ29tcG9uZW50KGV2ZW50LlJlY29yZHNbMF0uczMub2JqZWN0LmtleS5yZXBsYWNlKC9cXCsvZywgJyAnKSk7XG4gIC8vIGNvbnN0IHBhcmFtcyA9IHtcbiAgLy8gICAgIEJ1Y2tldDogYnVja2V0LFxuICAvLyAgICAgS2V5OiBrZXksXG4gIC8vIH07XG4gIC8vIHRyeSB7XG4gIC8vICAgICBjb25zdCB7IENvbnRlbnRUeXBlIH0gPSBhd2FpdCBzMy5nZXRPYmplY3QocGFyYW1zKS5wcm9taXNlKCk7XG4gIC8vICAgICBjb25zb2xlLmxvZygnQ09OVEVOVCBUWVBFOicsIENvbnRlbnRUeXBlKTtcbiAgLy8gICAgIHJldHVybiBDb250ZW50VHlwZTtcbiAgLy8gfSBjYXRjaCAoZXJyKSB7XG4gIC8vICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAvLyAgICAgY29uc3QgbWVzc2FnZSA9IGBFcnJvciBnZXR0aW5nIG9iamVjdCAke2tleX0gZnJvbSBidWNrZXQgJHtidWNrZXR9LiBNYWtlIHN1cmUgdGhleSBleGlzdCBhbmQgeW91ciBidWNrZXQgaXMgaW4gdGhlIHNhbWUgcmVnaW9uIGFzIHRoaXMgZnVuY3Rpb24uYDtcbiAgLy8gICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xuICAvLyAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAvLyB9XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "handler.js"
      ],
      "names": [
        "_s",
        "require",
        "_store",
        "exports",
        "handler",
        "event",
        "context",
        "getAccounts"
      ],
      "mappings": "AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAhB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;AAEA;;;;;;;;;;AAQAE,OAAO,CAACC,OAAR,GAAkB,OAAOC,KAAP,EAAcC,OAAd,KAA0B;AAC1C;AACA,QAAM,CAAC,GAAGN,EAAE,CAACO,WAAP,EAAoB,yBAApB,EAA+C,uBAA/C,CAAN,CAF0C,CAEqC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAnBD",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "sourcesContent": [
        "\"use strict\";\n\nvar _s = require(\"./s3\");\n\nvar _store = require(\"./store\");\n\n/**\n* Parameters (env vars)\n* \n* 1) BUCKET_NAME - name of the bucket containing the CloudTrail logs\n* 2) ORG_ID - the id of the AWS Organization to consider when creating/partitioning the database\n* 3) DATABASE - the name of the Athena database in which you want to create the table\n* 4) TABLE_NAME - the name of the table to create in the Athena database in DATABASE\n*/\nexports.handler = async (event, context) => {\n  // console.log('Received event:', JSON.stringify(event, null, 2));\n  await (0, _s.getAccounts)('gorillastack-cloudtrail', 'AWSLogs/o-s2ds5kg68o/'); // Get the object from the event and show its content type\n  // const bucket = event.Records[0].s3.bucket.name;\n  // const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n  // const params = {\n  //     Bucket: bucket,\n  //     Key: key,\n  // };\n  // try {\n  //     const { ContentType } = await s3.getObject(params).promise();\n  //     console.log('CONTENT TYPE:', ContentType);\n  //     return ContentType;\n  // } catch (err) {\n  //     console.log(err);\n  //     const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n  //     console.log(message);\n  //     throw new Error(message);\n  // }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1564385633589
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
        "sourceFileName": "s3.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDays = exports.getMonths = exports.getYears = exports.getRegions = exports.getAccounts = exports.mapLastPrefixesRegion = exports.mapLastPrefixesNumber = exports.listBucketAtPath = exports.getAllParitions = void 0;\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst createNode = (name, children) => ({\n  name,\n  children\n});\n\nconst createMonthNode = async (bucket, path, account, region, year, month) => {\n  const days = await getDays(bucket, path, account, region, year, month);\n  return createNode(month, days);\n};\n\nconst createYearNode = async (bucket, path, account, region, year) => {\n  const months = await getMonths(bucket, path, account, region, year);\n  const monthNodes = await Promise.all(months.map(month => createMonthNode(bucket, path, account, region, year, month)));\n  return createNode(year, monthNodes);\n};\n\nconst createRegionNode = async (bucket, path, account, region) => {\n  const years = await getYears(bucket, path, account, region);\n  const yearNodes = await Promise.all(years.map(year => createYearNode(bucket, path, account, region, year)));\n  return createNode(region, yearNodes);\n};\n\nconst createAccountNode = async (bucket, path, account) => {\n  const regions = await getRegions(bucket, path, account);\n  const regionNodes = await Promise.all(regions.map(region => createRegionNode(bucket, path, account, region)));\n  return createNode(account, regionNodes);\n};\n/**\n * get a tree of all partition key sets, broken down by order\n * \n * @param {String} bucket\n * @param {String} path\n */\n\n\nconst getAllParitions = async (bucket, path) => {\n  const accounts = await getAccounts(bucket, path);\n  return Promise.all(accounts.map(account => createAccountNode(bucket, path, account)));\n};\n/**\n * list the given bucket at the given path\n *\n * @param {String} bucket\n * @param {String} path\n */\n\n\nexports.getAllParitions = getAllParitions;\n\nconst listBucketAtPath = (bucket, path) => new Promise((resolve, reject) => {\n  const s3 = new _awsSdk.default.S3({\n    apiVersion: '2006-03-01'\n  });\n  s3.listObjectsV2({\n    Bucket: bucket,\n    Prefix: path,\n    Delimiter: '/'\n  }, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      console.log(`IsTruncated = ${data.IsTruncated}`);\n      console.log(data);\n      resolve(data);\n    }\n  });\n});\n/**\n * Methods for finding candidate subpaths for partitioning\n */\n\n\nexports.listBucketAtPath = listBucketAtPath;\n\nconst mapLastPrefixesNumber = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/(\\d+)\\/$/, '$1'));\n\nexports.mapLastPrefixesNumber = mapLastPrefixesNumber;\n\nconst mapLastPrefixesRegion = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/([a-z1-9\\-]+)\\/$/, '$1'));\n\nexports.mapLastPrefixesRegion = mapLastPrefixesRegion;\n\nconst getAccounts = async (bucket, path) => {\n  const contents = await listBucketAtPath(bucket, path);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getAccounts = getAccounts;\n\nconst getRegions = async (bucket, path, account) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/`);\n  return mapLastPrefixesRegion(contents);\n};\n\nexports.getRegions = getRegions;\n\nconst getYears = async (bucket, path, account, region) => {\n  console.log(`Path for getYears: ${path}${account}/CloudTrail/${region}`);\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getYears = getYears;\n\nconst getMonths = async (bucket, path, account, region, year) => {\n  console.log(`Path for getMonths: ${path}${account}/CloudTrail/${region}/${year}`);\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getMonths = getMonths;\n\nconst getDays = async (bucket, path, account, region, year, months) => {\n  console.log(`Path for getDays: ${path}${account}/CloudTrail/${region}/${year}/${months}`);\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}/${months}`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getDays = getDays;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "s3.js"
      ],
      "names": [
        "Object",
        "defineProperty",
        "exports",
        "value",
        "getDays",
        "getMonths",
        "getYears",
        "getRegions",
        "getAccounts",
        "mapLastPrefixesRegion",
        "mapLastPrefixesNumber",
        "listBucketAtPath",
        "getAllParitions",
        "_awsSdk",
        "_interopRequireDefault",
        "require",
        "obj",
        "__esModule",
        "default",
        "createNode",
        "name",
        "children",
        "createMonthNode",
        "bucket",
        "path",
        "account",
        "region",
        "year",
        "month",
        "days",
        "createYearNode",
        "months",
        "monthNodes",
        "Promise",
        "all",
        "map",
        "createRegionNode",
        "years",
        "yearNodes",
        "createAccountNode",
        "regions",
        "regionNodes",
        "accounts",
        "resolve",
        "reject",
        "s3",
        "S3",
        "apiVersion",
        "listObjectsV2",
        "Bucket",
        "Prefix",
        "Delimiter",
        "err",
        "data",
        "console",
        "log",
        "IsTruncated",
        "contents",
        "CommonPrefixes",
        "prefix",
        "replace"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "sourcesContent": [
        "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDays = exports.getMonths = exports.getYears = exports.getRegions = exports.getAccounts = exports.mapLastPrefixesRegion = exports.mapLastPrefixesNumber = exports.listBucketAtPath = exports.getAllParitions = void 0;\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst createNode = (name, children) => ({\n  name,\n  children\n});\n\nconst createMonthNode = async (bucket, path, account, region, year, month) => {\n  const days = await getDays(bucket, path, account, region, year, month);\n  return createNode(month, days);\n};\n\nconst createYearNode = async (bucket, path, account, region, year) => {\n  const months = await getMonths(bucket, path, account, region, year);\n  const monthNodes = await Promise.all(months.map(month => createMonthNode(bucket, path, account, region, year, month)));\n  return createNode(year, monthNodes);\n};\n\nconst createRegionNode = async (bucket, path, account, region) => {\n  const years = await getYears(bucket, path, account, region);\n  const yearNodes = await Promise.all(years.map(year => createYearNode(bucket, path, account, region, year)));\n  return createNode(region, yearNodes);\n};\n\nconst createAccountNode = async (bucket, path, account) => {\n  const regions = await getRegions(bucket, path, account);\n  const regionNodes = await Promise.all(regions.map(region => createRegionNode(bucket, path, account, region)));\n  return createNode(account, regionNodes);\n};\n/**\n * get a tree of all partition key sets, broken down by order\n * \n * @param {String} bucket\n * @param {String} path\n */\n\n\nconst getAllParitions = async (bucket, path) => {\n  const accounts = await getAccounts(bucket, path);\n  return Promise.all(accounts.map(account => createAccountNode(bucket, path, account)));\n};\n/**\n * list the given bucket at the given path\n *\n * @param {String} bucket\n * @param {String} path\n */\n\n\nexports.getAllParitions = getAllParitions;\n\nconst listBucketAtPath = (bucket, path) => new Promise((resolve, reject) => {\n  const s3 = new _awsSdk.default.S3({\n    apiVersion: '2006-03-01'\n  });\n  s3.listObjectsV2({\n    Bucket: bucket,\n    Prefix: path,\n    Delimiter: '/'\n  }, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      console.log(`IsTruncated = ${data.IsTruncated}`);\n      console.log(data);\n      resolve(data);\n    }\n  });\n});\n/**\n * Methods for finding candidate subpaths for partitioning\n */\n\n\nexports.listBucketAtPath = listBucketAtPath;\n\nconst mapLastPrefixesNumber = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/(\\d+)\\/$/, '$1'));\n\nexports.mapLastPrefixesNumber = mapLastPrefixesNumber;\n\nconst mapLastPrefixesRegion = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/([a-z1-9\\-]+)\\/$/, '$1'));\n\nexports.mapLastPrefixesRegion = mapLastPrefixesRegion;\n\nconst getAccounts = async (bucket, path) => {\n  const contents = await listBucketAtPath(bucket, path);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getAccounts = getAccounts;\n\nconst getRegions = async (bucket, path, account) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/`);\n  return mapLastPrefixesRegion(contents);\n};\n\nexports.getRegions = getRegions;\n\nconst getYears = async (bucket, path, account, region) => {\n  console.log(`Path for getYears: ${path}${account}/CloudTrail/${region}`);\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getYears = getYears;\n\nconst getMonths = async (bucket, path, account, region, year) => {\n  console.log(`Path for getMonths: ${path}${account}/CloudTrail/${region}/${year}`);\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getMonths = getMonths;\n\nconst getDays = async (bucket, path, account, region, year, months) => {\n  console.log(`Path for getDays: ${path}${account}/CloudTrail/${region}/${year}/${months}`);\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}/${months}`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getDays = getDays;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564452240359
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/store.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/store.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/store.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
        "sourceFileName": "store.js"
      }
    },
    "ast": null,
    "code": "// Accounts last partitioned\n// \n// 012345678901\n// 012345678901/ap-southeast-2\n// 012345678901/ap-southeast-2/2019/\n// 012345678901/ap-southeast-2/2019/01\n// 012345678901/ap-southeast-2/2019/01/01\n// Store last log timestamp\n\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZS9kZXYvZ3MvYXRoZW5hLWNsb3VkdHJhaWwtcGFydGl0aW9uZXIvZGlzdCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFjY291bnRzIGxhc3QgcGFydGl0aW9uZWRcbi8vIFxuLy8gMDEyMzQ1Njc4OTAxXG4vLyAwMTIzNDU2Nzg5MDEvYXAtc291dGhlYXN0LTJcbi8vIDAxMjM0NTY3ODkwMS9hcC1zb3V0aGVhc3QtMi8yMDE5L1xuLy8gMDEyMzQ1Njc4OTAxL2FwLXNvdXRoZWFzdC0yLzIwMTkvMDFcbi8vIDAxMjM0NTY3ODkwMS9hcC1zb3V0aGVhc3QtMi8yMDE5LzAxLzAxXG4vLyBTdG9yZSBsYXN0IGxvZyB0aW1lc3RhbXBcblwidXNlIHN0cmljdFwiOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [],
      "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "sourcesContent": [
        "// Accounts last partitioned\n// \n// 012345678901\n// 012345678901/ap-southeast-2\n// 012345678901/ap-southeast-2/2019/\n// 012345678901/ap-southeast-2/2019/01\n// 012345678901/ap-southeast-2/2019/01/01\n// Store last log timestamp\n\"use strict\";"
      ]
    },
    "sourceType": "script",
    "mtime": 1564452240364
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/handler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
        "sourceFileName": "handler.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.handler = void 0;\n\nvar _s = require(\"./s3\");\n\nvar _store = require(\"./store\");\n/**\n* Parameters (env vars)\n* \n* 1) BUCKET_NAME - name of the bucket containing the CloudTrail logs\n* 2) ORG_ID - the id of the AWS Organization to consider when creating/partitioning the database\n* 3) DATABASE - the name of the Athena database in which you want to create the table\n* 4) TABLE_NAME - the name of the table to create in the Athena database in DATABASE\n*/\n\n\nconst handler = async (event, context) => {\n  // console.log('Received event:', JSON.stringify(event, null, 2));\n  const partitions = await (0, _s.getAllParitions)('gorillastack-cloudtrail', 'AWSLogs/o-s2ds5kg68o/');\n  console.log(JSON.stringify(partitions));\n};\n\nexports.handler = handler;\nvar _default = handler;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXIuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiaGFuZGxlciIsIl9zIiwicmVxdWlyZSIsIl9zdG9yZSIsImV2ZW50IiwiY29udGV4dCIsInBhcnRpdGlvbnMiLCJnZXRBbGxQYXJpdGlvbnMiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsIl9kZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQkYsT0FBTyxDQUFDRyxPQUFSLEdBQWtCLEtBQUssQ0FBekM7O0FBRUEsSUFBSUMsRUFBRSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFoQjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXBCO0FBRUE7Ozs7Ozs7Ozs7QUFRQSxNQUFNRixPQUFPLEdBQUcsT0FBT0ksS0FBUCxFQUFjQyxPQUFkLEtBQTBCO0FBQ3hDO0FBQ0EsUUFBTUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxHQUFHTCxFQUFFLENBQUNNLGVBQVAsRUFBd0IseUJBQXhCLEVBQW1ELHVCQUFuRCxDQUF6QjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBSSxDQUFDQyxTQUFMLENBQWVMLFVBQWYsQ0FBWjtBQUNELENBSkQ7O0FBTUFULE9BQU8sQ0FBQ0csT0FBUixHQUFrQkEsT0FBbEI7QUFDQSxJQUFJWSxRQUFRLEdBQUdaLE9BQWY7QUFDQUgsT0FBTyxDQUFDRSxPQUFSLEdBQWtCYSxRQUFsQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZS9kZXYvZ3MvYXRoZW5hLWNsb3VkdHJhaWwtcGFydGl0aW9uZXIvZGlzdCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5oYW5kbGVyID0gdm9pZCAwO1xuXG52YXIgX3MgPSByZXF1aXJlKFwiLi9zM1wiKTtcblxudmFyIF9zdG9yZSA9IHJlcXVpcmUoXCIuL3N0b3JlXCIpO1xuXG4vKipcbiogUGFyYW1ldGVycyAoZW52IHZhcnMpXG4qIFxuKiAxKSBCVUNLRVRfTkFNRSAtIG5hbWUgb2YgdGhlIGJ1Y2tldCBjb250YWluaW5nIHRoZSBDbG91ZFRyYWlsIGxvZ3NcbiogMikgT1JHX0lEIC0gdGhlIGlkIG9mIHRoZSBBV1MgT3JnYW5pemF0aW9uIHRvIGNvbnNpZGVyIHdoZW4gY3JlYXRpbmcvcGFydGl0aW9uaW5nIHRoZSBkYXRhYmFzZVxuKiAzKSBEQVRBQkFTRSAtIHRoZSBuYW1lIG9mIHRoZSBBdGhlbmEgZGF0YWJhc2UgaW4gd2hpY2ggeW91IHdhbnQgdG8gY3JlYXRlIHRoZSB0YWJsZVxuKiA0KSBUQUJMRV9OQU1FIC0gdGhlIG5hbWUgb2YgdGhlIHRhYmxlIHRvIGNyZWF0ZSBpbiB0aGUgQXRoZW5hIGRhdGFiYXNlIGluIERBVEFCQVNFXG4qL1xuY29uc3QgaGFuZGxlciA9IGFzeW5jIChldmVudCwgY29udGV4dCkgPT4ge1xuICAvLyBjb25zb2xlLmxvZygnUmVjZWl2ZWQgZXZlbnQ6JywgSlNPTi5zdHJpbmdpZnkoZXZlbnQsIG51bGwsIDIpKTtcbiAgY29uc3QgcGFydGl0aW9ucyA9IGF3YWl0ICgwLCBfcy5nZXRBbGxQYXJpdGlvbnMpKCdnb3JpbGxhc3RhY2stY2xvdWR0cmFpbCcsICdBV1NMb2dzL28tczJkczVrZzY4by8nKTtcbiAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocGFydGl0aW9ucykpO1xufTtcblxuZXhwb3J0cy5oYW5kbGVyID0gaGFuZGxlcjtcbnZhciBfZGVmYXVsdCA9IGhhbmRsZXI7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "handler.js"
      ],
      "names": [
        "Object",
        "defineProperty",
        "exports",
        "value",
        "default",
        "handler",
        "_s",
        "require",
        "_store",
        "event",
        "context",
        "partitions",
        "getAllParitions",
        "console",
        "log",
        "JSON",
        "stringify",
        "_default"
      ],
      "mappings": "AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,OAAR,GAAkB,KAAK,CAAzC;;AAEA,IAAIC,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAhB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;AAEA;;;;;;;;;;AAQA,MAAMF,OAAO,GAAG,OAAOI,KAAP,EAAcC,OAAd,KAA0B;AACxC;AACA,QAAMC,UAAU,GAAG,MAAM,CAAC,GAAGL,EAAE,CAACM,eAAP,EAAwB,yBAAxB,EAAmD,uBAAnD,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAAZ;AACD,CAJD;;AAMAT,OAAO,CAACG,OAAR,GAAkBA,OAAlB;AACA,IAAIY,QAAQ,GAAGZ,OAAf;AACAH,OAAO,CAACE,OAAR,GAAkBa,QAAlB",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "sourcesContent": [
        "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.handler = void 0;\n\nvar _s = require(\"./s3\");\n\nvar _store = require(\"./store\");\n\n/**\n* Parameters (env vars)\n* \n* 1) BUCKET_NAME - name of the bucket containing the CloudTrail logs\n* 2) ORG_ID - the id of the AWS Organization to consider when creating/partitioning the database\n* 3) DATABASE - the name of the Athena database in which you want to create the table\n* 4) TABLE_NAME - the name of the table to create in the Athena database in DATABASE\n*/\nconst handler = async (event, context) => {\n  // console.log('Received event:', JSON.stringify(event, null, 2));\n  const partitions = await (0, _s.getAllParitions)('gorillastack-cloudtrail', 'AWSLogs/o-s2ds5kg68o/');\n  console.log(JSON.stringify(partitions));\n};\n\nexports.handler = handler;\nvar _default = handler;\nexports.default = _default;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564452253386
  },
  "{\"sourceRoot\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist\",\"caller\":{\"name\":\"@babel/node\"},\"configFile\":false,\"cwd\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"filename\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js\",\"babelrc\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/e/dev/gs/athena-cloudtrail-partitioner\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "caller": {
        "name": "@babel/node"
      },
      "configFile": false,
      "cwd": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js",
      "babelrc": false,
      "envName": "development",
      "root": "/Users/e/dev/gs/athena-cloudtrail-partitioner",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist/s3.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
        "sourceFileName": "s3.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDays = exports.getMonths = exports.getYears = exports.getRegions = exports.getAccounts = exports.mapLastPrefixesRegion = exports.mapLastPrefixesNumber = exports.listBucketAtPath = exports.getAllParitions = void 0;\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst createNode = (name, children) => ({\n  name,\n  children\n});\n\nconst createMonthNode = async (bucket, path, account, region, year, month) => {\n  const days = await getDays(bucket, path, account, region, year, month);\n  return createNode(month, days);\n};\n\nconst createYearNode = async (bucket, path, account, region, year) => {\n  const months = await getMonths(bucket, path, account, region, year);\n  const monthNodes = await Promise.all(months.map(month => createMonthNode(bucket, path, account, region, year, month)));\n  return createNode(year, monthNodes);\n};\n\nconst createRegionNode = async (bucket, path, account, region) => {\n  const years = await getYears(bucket, path, account, region);\n  const yearNodes = await Promise.all(years.map(year => createYearNode(bucket, path, account, region, year)));\n  return createNode(region, yearNodes);\n};\n\nconst createAccountNode = async (bucket, path, account) => {\n  const regions = await getRegions(bucket, path, account);\n  const regionNodes = await Promise.all(regions.map(region => createRegionNode(bucket, path, account, region)));\n  return createNode(account, regionNodes);\n};\n/**\n * get a tree of all partition key sets, broken down by order\n * \n * @param {String} bucket\n * @param {String} path\n */\n\n\nconst getAllParitions = async (bucket, path) => {\n  const accounts = await getAccounts(bucket, path);\n  return Promise.all(accounts.map(account => createAccountNode(bucket, path, account)));\n};\n/**\n * list the given bucket at the given path\n *\n * @param {String} bucket\n * @param {String} path\n */\n\n\nexports.getAllParitions = getAllParitions;\n\nconst listBucketAtPath = (bucket, path) => new Promise((resolve, reject) => {\n  const s3 = new _awsSdk.default.S3({\n    apiVersion: '2006-03-01'\n  });\n  s3.listObjectsV2({\n    Bucket: bucket,\n    Prefix: path,\n    Delimiter: '/'\n  }, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      // console.log(data);\n      resolve(data);\n    }\n  });\n});\n/**\n * Methods for finding candidate subpaths for partitioning\n */\n\n\nexports.listBucketAtPath = listBucketAtPath;\n\nconst mapLastPrefixesNumber = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/(\\d+)\\/$/, '$1'));\n\nexports.mapLastPrefixesNumber = mapLastPrefixesNumber;\n\nconst mapLastPrefixesRegion = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/([a-z1-9\\-]+)\\/$/, '$1'));\n\nexports.mapLastPrefixesRegion = mapLastPrefixesRegion;\n\nconst getAccounts = async (bucket, path) => {\n  const contents = await listBucketAtPath(bucket, path);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getAccounts = getAccounts;\n\nconst getRegions = async (bucket, path, account) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/`);\n  return mapLastPrefixesRegion(contents);\n};\n\nexports.getRegions = getRegions;\n\nconst getYears = async (bucket, path, account, region) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getYears = getYears;\n\nconst getMonths = async (bucket, path, account, region, year) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}/`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getMonths = getMonths;\n\nconst getDays = async (bucket, path, account, region, year, month) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}/${month}/`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getDays = getDays;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "s3.js"
      ],
      "names": [
        "Object",
        "defineProperty",
        "exports",
        "value",
        "getDays",
        "getMonths",
        "getYears",
        "getRegions",
        "getAccounts",
        "mapLastPrefixesRegion",
        "mapLastPrefixesNumber",
        "listBucketAtPath",
        "getAllParitions",
        "_awsSdk",
        "_interopRequireDefault",
        "require",
        "obj",
        "__esModule",
        "default",
        "createNode",
        "name",
        "children",
        "createMonthNode",
        "bucket",
        "path",
        "account",
        "region",
        "year",
        "month",
        "days",
        "createYearNode",
        "months",
        "monthNodes",
        "Promise",
        "all",
        "map",
        "createRegionNode",
        "years",
        "yearNodes",
        "createAccountNode",
        "regions",
        "regionNodes",
        "accounts",
        "resolve",
        "reject",
        "s3",
        "S3",
        "apiVersion",
        "listObjectsV2",
        "Bucket",
        "Prefix",
        "Delimiter",
        "err",
        "data",
        "contents",
        "CommonPrefixes",
        "prefix",
        "replace"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/e/dev/gs/athena-cloudtrail-partitioner/dist",
      "sourcesContent": [
        "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDays = exports.getMonths = exports.getYears = exports.getRegions = exports.getAccounts = exports.mapLastPrefixesRegion = exports.mapLastPrefixesNumber = exports.listBucketAtPath = exports.getAllParitions = void 0;\n\nvar _awsSdk = _interopRequireDefault(require(\"aws-sdk\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst createNode = (name, children) => ({\n  name,\n  children\n});\n\nconst createMonthNode = async (bucket, path, account, region, year, month) => {\n  const days = await getDays(bucket, path, account, region, year, month);\n  return createNode(month, days);\n};\n\nconst createYearNode = async (bucket, path, account, region, year) => {\n  const months = await getMonths(bucket, path, account, region, year);\n  const monthNodes = await Promise.all(months.map(month => createMonthNode(bucket, path, account, region, year, month)));\n  return createNode(year, monthNodes);\n};\n\nconst createRegionNode = async (bucket, path, account, region) => {\n  const years = await getYears(bucket, path, account, region);\n  const yearNodes = await Promise.all(years.map(year => createYearNode(bucket, path, account, region, year)));\n  return createNode(region, yearNodes);\n};\n\nconst createAccountNode = async (bucket, path, account) => {\n  const regions = await getRegions(bucket, path, account);\n  const regionNodes = await Promise.all(regions.map(region => createRegionNode(bucket, path, account, region)));\n  return createNode(account, regionNodes);\n};\n/**\n * get a tree of all partition key sets, broken down by order\n * \n * @param {String} bucket\n * @param {String} path\n */\n\n\nconst getAllParitions = async (bucket, path) => {\n  const accounts = await getAccounts(bucket, path);\n  return Promise.all(accounts.map(account => createAccountNode(bucket, path, account)));\n};\n/**\n * list the given bucket at the given path\n *\n * @param {String} bucket\n * @param {String} path\n */\n\n\nexports.getAllParitions = getAllParitions;\n\nconst listBucketAtPath = (bucket, path) => new Promise((resolve, reject) => {\n  const s3 = new _awsSdk.default.S3({\n    apiVersion: '2006-03-01'\n  });\n  s3.listObjectsV2({\n    Bucket: bucket,\n    Prefix: path,\n    Delimiter: '/'\n  }, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      // console.log(data);\n      resolve(data);\n    }\n  });\n});\n/**\n * Methods for finding candidate subpaths for partitioning\n */\n\n\nexports.listBucketAtPath = listBucketAtPath;\n\nconst mapLastPrefixesNumber = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/(\\d+)\\/$/, '$1'));\n\nexports.mapLastPrefixesNumber = mapLastPrefixesNumber;\n\nconst mapLastPrefixesRegion = contents => contents.CommonPrefixes.map(prefix => prefix.Prefix.replace(/^.*\\/([a-z1-9\\-]+)\\/$/, '$1'));\n\nexports.mapLastPrefixesRegion = mapLastPrefixesRegion;\n\nconst getAccounts = async (bucket, path) => {\n  const contents = await listBucketAtPath(bucket, path);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getAccounts = getAccounts;\n\nconst getRegions = async (bucket, path, account) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/`);\n  return mapLastPrefixesRegion(contents);\n};\n\nexports.getRegions = getRegions;\n\nconst getYears = async (bucket, path, account, region) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getYears = getYears;\n\nconst getMonths = async (bucket, path, account, region, year) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}/`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getMonths = getMonths;\n\nconst getDays = async (bucket, path, account, region, year, month) => {\n  const contents = await listBucketAtPath(bucket, `${path}${account}/CloudTrail/${region}/${year}/${month}/`);\n  return mapLastPrefixesNumber(contents);\n};\n\nexports.getDays = getDays;"
      ]
    },
    "sourceType": "script",
    "mtime": 1564452815649
  }
}